{"ast":null,"code":"import { TIME_UNITS_PATTERN, parseDuration, TIME_UNITS_NO_ABBR_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { reverseDuration } from \"../../../calculation/duration.js\";\nconst PATTERN = new RegExp(`(this|last|past|next|after|\\\\+|-)\\\\s*(${TIME_UNITS_PATTERN})(?=\\\\W|$)`, \"i\");\nconst PATTERN_NO_ABBR = new RegExp(`(this|last|past|next|after|\\\\+|-)\\\\s*(${TIME_UNITS_NO_ABBR_PATTERN})(?=\\\\W|$)`, \"i\");\nexport default class ENTimeUnitCasualRelativeFormatParser extends AbstractParserWithWordBoundaryChecking {\n  allowAbbreviations;\n  constructor(allowAbbreviations = true) {\n    super();\n    this.allowAbbreviations = allowAbbreviations;\n  }\n  innerPattern() {\n    return this.allowAbbreviations ? PATTERN : PATTERN_NO_ABBR;\n  }\n  innerExtract(context, match) {\n    const prefix = match[1].toLowerCase();\n    let duration = parseDuration(match[2]);\n    if (!duration) {\n      return null;\n    }\n    switch (prefix) {\n      case \"last\":\n      case \"past\":\n      case \"-\":\n        duration = reverseDuration(duration);\n        break;\n    }\n    return ParsingComponents.createRelativeFromReference(context.reference, duration);\n  }\n}","map":{"version":3,"names":["TIME_UNITS_PATTERN","parseDuration","TIME_UNITS_NO_ABBR_PATTERN","ParsingComponents","AbstractParserWithWordBoundaryChecking","reverseDuration","PATTERN","RegExp","PATTERN_NO_ABBR","ENTimeUnitCasualRelativeFormatParser","allowAbbreviations","constructor","innerPattern","innerExtract","context","match","prefix","toLowerCase","duration","createRelativeFromReference","reference"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\locales\\en\\parsers\\ENTimeUnitCasualRelativeFormatParser.ts"],"sourcesContent":["import { TIME_UNITS_PATTERN, parseDuration, TIME_UNITS_NO_ABBR_PATTERN } from \"../constants\";\nimport { ParsingContext } from \"../../../chrono\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { reverseDuration } from \"../../../calculation/duration\";\n\nconst PATTERN = new RegExp(`(this|last|past|next|after|\\\\+|-)\\\\s*(${TIME_UNITS_PATTERN})(?=\\\\W|$)`, \"i\");\nconst PATTERN_NO_ABBR = new RegExp(\n    `(this|last|past|next|after|\\\\+|-)\\\\s*(${TIME_UNITS_NO_ABBR_PATTERN})(?=\\\\W|$)`,\n    \"i\"\n);\n\nexport default class ENTimeUnitCasualRelativeFormatParser extends AbstractParserWithWordBoundaryChecking {\n    constructor(private allowAbbreviations: boolean = true) {\n        super();\n    }\n\n    innerPattern(): RegExp {\n        return this.allowAbbreviations ? PATTERN : PATTERN_NO_ABBR;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const prefix = match[1].toLowerCase();\n        let duration = parseDuration(match[2]);\n        if (!duration) {\n            return null;\n        }\n        switch (prefix) {\n            case \"last\":\n            case \"past\":\n            case \"-\":\n                duration = reverseDuration(duration);\n                break;\n        }\n        return ParsingComponents.createRelativeFromReference(context.reference, duration);\n    }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,aAAa,EAAEC,0BAA0B,QAAQ,iBAAe;AAE7F,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAChH,SAASC,eAAe,QAAQ,kCAAgC;AAEhE,MAAMC,OAAO,GAAG,IAAIC,MAAM,CAAC,yCAAyCP,kBAAkB,YAAY,EAAE,GAAG,CAAC;AACxG,MAAMQ,eAAe,GAAG,IAAID,MAAM,CAC9B,yCAAyCL,0BAA0B,YAAY,EAC/E,GAAG,CACN;AAED,eAAc,MAAOO,oCAAqC,SAAQL,sCAAsC;EAChFM,kBAAA;EAApBC,YAAoBD,kBAAA,GAA8B,IAAI;IAClD,KAAK,EAAE;IADS,KAAAA,kBAAkB,GAAlBA,kBAAkB;EAEtC;EAEAE,YAAYA,CAAA;IACR,OAAO,IAAI,CAACF,kBAAkB,GAAGJ,OAAO,GAAGE,eAAe;EAC9D;EAEAK,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,MAAM,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;IACrC,IAAIC,QAAQ,GAAGjB,aAAa,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,CAACG,QAAQ,EAAE;MACX,OAAO,IAAI;IACf;IACA,QAAQF,MAAM;MACV,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,GAAG;QACJE,QAAQ,GAAGb,eAAe,CAACa,QAAQ,CAAC;QACpC;IACR;IACA,OAAOf,iBAAiB,CAACgB,2BAA2B,CAACL,OAAO,CAACM,SAAS,EAAEF,QAAQ,CAAC;EACrF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}