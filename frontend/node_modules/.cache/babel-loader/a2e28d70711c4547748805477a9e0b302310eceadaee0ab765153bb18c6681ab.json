{"ast":null,"code":"import { parseDuration, TIME_UNITS_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithLeftBoundaryChecking } from \"./AbstractParserWithWordBoundaryChecking.js\";\nimport { reverseDuration } from \"../../../calculation/duration.js\";\nexport default class RUTimeUnitAgoFormatParser extends AbstractParserWithLeftBoundaryChecking {\n  innerPatternString(context) {\n    return `(${TIME_UNITS_PATTERN})\\\\s{0,5}назад(?=(?:\\\\W|$))`;\n  }\n  innerExtract(context, match) {\n    const timeUnits = parseDuration(match[1]);\n    const outputTimeUnits = reverseDuration(timeUnits);\n    return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n  }\n}","map":{"version":3,"names":["parseDuration","TIME_UNITS_PATTERN","ParsingComponents","AbstractParserWithLeftBoundaryChecking","reverseDuration","RUTimeUnitAgoFormatParser","innerPatternString","context","innerExtract","match","timeUnits","outputTimeUnits","createRelativeFromReference","reference"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\locales\\ru\\parsers\\RUTimeUnitAgoFormatParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { parseDuration, TIME_UNITS_PATTERN } from \"../constants\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithLeftBoundaryChecking } from \"./AbstractParserWithWordBoundaryChecking\";\nimport { reverseDuration } from \"../../../calculation/duration\";\n\nexport default class RUTimeUnitAgoFormatParser extends AbstractParserWithLeftBoundaryChecking {\n    innerPatternString(context: ParsingContext): string {\n        return `(${TIME_UNITS_PATTERN})\\\\s{0,5}назад(?=(?:\\\\W|$))`;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const timeUnits = parseDuration(match[1]);\n        const outputTimeUnits = reverseDuration(timeUnits);\n\n        return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n    }\n}\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,kBAAkB,QAAQ,iBAAe;AACjE,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,6CAA2C;AAClG,SAASC,eAAe,QAAQ,kCAAgC;AAEhE,eAAc,MAAOC,yBAA0B,SAAQF,sCAAsC;EACzFG,kBAAkBA,CAACC,OAAuB;IACtC,OAAO,IAAIN,kBAAkB,6BAA6B;EAC9D;EAEAO,YAAYA,CAACD,OAAuB,EAAEE,KAAuB;IACzD,MAAMC,SAAS,GAAGV,aAAa,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,MAAME,eAAe,GAAGP,eAAe,CAACM,SAAS,CAAC;IAElD,OAAOR,iBAAiB,CAACU,2BAA2B,CAACL,OAAO,CAACM,SAAS,EAAEF,eAAe,CAAC;EAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}