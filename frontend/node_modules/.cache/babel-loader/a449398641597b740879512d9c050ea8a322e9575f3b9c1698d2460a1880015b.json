{"ast":null,"code":"import { TIME_UNITS_PATTERN, parseDuration } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nconst PATTERN_WITH_PREFIX = new RegExp(`(?:within|in|for)\\\\s*` + `(?:(?:pi첫 o meno|intorno|approssimativamente|verso|verso le)\\\\s*(?:~\\\\s*)?)?(${TIME_UNITS_PATTERN})(?=\\\\W|$)`, \"i\");\nconst PATTERN_WITHOUT_PREFIX = new RegExp(`(?:(?:pi첫 o meno|intorno|approssimativamente|verso|verso le)\\\\s*(?:~\\\\s*)?)?(${TIME_UNITS_PATTERN})(?=\\\\W|$)`, \"i\");\nexport default class ENTimeUnitWithinFormatParser extends AbstractParserWithWordBoundaryChecking {\n  innerPattern(context) {\n    return context.option.forwardDate ? PATTERN_WITHOUT_PREFIX : PATTERN_WITH_PREFIX;\n  }\n  innerExtract(context, match) {\n    const timeUnits = parseDuration(match[1]);\n    return ParsingComponents.createRelativeFromReference(context.reference, timeUnits);\n  }\n}","map":{"version":3,"names":["TIME_UNITS_PATTERN","parseDuration","ParsingComponents","AbstractParserWithWordBoundaryChecking","PATTERN_WITH_PREFIX","RegExp","PATTERN_WITHOUT_PREFIX","ENTimeUnitWithinFormatParser","innerPattern","context","option","forwardDate","innerExtract","match","timeUnits","createRelativeFromReference","reference"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\locales\\it\\parsers\\ITTimeUnitWithinFormatParser.ts"],"sourcesContent":["import { TIME_UNITS_PATTERN, parseDuration } from \"../constants\";\nimport { ParsingContext } from \"../../../chrono\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\n\nconst PATTERN_WITH_PREFIX = new RegExp(\n    `(?:within|in|for)\\\\s*` +\n        `(?:(?:pi첫 o meno|intorno|approssimativamente|verso|verso le)\\\\s*(?:~\\\\s*)?)?(${TIME_UNITS_PATTERN})(?=\\\\W|$)`,\n    \"i\"\n);\n\nconst PATTERN_WITHOUT_PREFIX = new RegExp(\n    `(?:(?:pi첫 o meno|intorno|approssimativamente|verso|verso le)\\\\s*(?:~\\\\s*)?)?(${TIME_UNITS_PATTERN})(?=\\\\W|$)`,\n    \"i\"\n);\n\nexport default class ENTimeUnitWithinFormatParser extends AbstractParserWithWordBoundaryChecking {\n    innerPattern(context: ParsingContext): RegExp {\n        return context.option.forwardDate ? PATTERN_WITHOUT_PREFIX : PATTERN_WITH_PREFIX;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents {\n        const timeUnits = parseDuration(match[1]);\n        return ParsingComponents.createRelativeFromReference(context.reference, timeUnits);\n    }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,aAAa,QAAQ,iBAAe;AAEjE,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAEhH,MAAMC,mBAAmB,GAAG,IAAIC,MAAM,CAClC,uBAAuB,GACnB,gFAAgFL,kBAAkB,YAAY,EAClH,GAAG,CACN;AAED,MAAMM,sBAAsB,GAAG,IAAID,MAAM,CACrC,gFAAgFL,kBAAkB,YAAY,EAC9G,GAAG,CACN;AAED,eAAc,MAAOO,4BAA6B,SAAQJ,sCAAsC;EAC5FK,YAAYA,CAACC,OAAuB;IAChC,OAAOA,OAAO,CAACC,MAAM,CAACC,WAAW,GAAGL,sBAAsB,GAAGF,mBAAmB;EACpF;EAEAQ,YAAYA,CAACH,OAAuB,EAAEI,KAAuB;IACzD,MAAMC,SAAS,GAAGb,aAAa,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,OAAOX,iBAAiB,CAACa,2BAA2B,CAACN,OAAO,CAACO,SAAS,EAAEF,SAAS,CAAC;EACtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}