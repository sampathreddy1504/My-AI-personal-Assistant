{"ast":null,"code":"import * as references from \"../../../common/casualReferences.js\";\nimport { assignSimilarDate } from \"../../../utils/dates.js\";\nimport { AbstractParserWithLeftRightBoundaryChecking } from \"./AbstractParserWithWordBoundaryChecking.js\";\nexport default class UKCasualTimeParser extends AbstractParserWithLeftRightBoundaryChecking {\n  innerPatternString(context) {\n    return `(зараз|минулого\\\\s*вечора|минулої\\\\s*ночі|наступної\\\\s*ночі|сьогодні\\\\s*вночі|цієї\\\\s*ночі|цього ранку|вранці|ранку|зранку|опівдні|ввечері|вечора|опівночі|вночі)`;\n  }\n  innerExtract(context, match) {\n    let targetDate = context.refDate;\n    const lowerText = match[0].toLowerCase();\n    const component = context.createParsingComponents();\n    if (lowerText === \"зараз\") {\n      return references.now(context.reference);\n    }\n    if (lowerText === \"ввечері\" || lowerText === \"вечора\") {\n      return references.evening(context.reference);\n    }\n    if (lowerText.endsWith(\"вранці\") || lowerText.endsWith(\"ранку\") || lowerText.endsWith(\"зранку\")) {\n      return references.morning(context.reference);\n    }\n    if (lowerText.endsWith(\"опівдні\")) {\n      return references.noon(context.reference);\n    }\n    if (lowerText.match(/минулої\\s*ночі/)) {\n      return references.lastNight(context.reference);\n    }\n    if (lowerText.match(/минулого\\s*вечора/)) {\n      return references.yesterdayEvening(context.reference);\n    }\n    if (lowerText.match(/наступної\\s*ночі/)) {\n      const daysToAdd = targetDate.getHours() < 22 ? 1 : 2;\n      const nextDay = new Date(targetDate.getTime());\n      nextDay.setDate(nextDay.getDate() + daysToAdd);\n      assignSimilarDate(component, nextDay);\n      component.imply(\"hour\", 1);\n    }\n    if (lowerText.match(/цієї\\s*ночі/)) {\n      return references.midnight(context.reference);\n    }\n    if (lowerText.endsWith(\"опівночі\") || lowerText.endsWith(\"вночі\")) {\n      return references.midnight(context.reference);\n    }\n    return component;\n  }\n}","map":{"version":3,"names":["references","assignSimilarDate","AbstractParserWithLeftRightBoundaryChecking","UKCasualTimeParser","innerPatternString","context","innerExtract","match","targetDate","refDate","lowerText","toLowerCase","component","createParsingComponents","now","reference","evening","endsWith","morning","noon","lastNight","yesterdayEvening","daysToAdd","getHours","nextDay","Date","getTime","setDate","getDate","imply","midnight"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\locales\\uk\\parsers\\UKCasualTimeParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport * as references from \"../../../common/casualReferences\";\nimport { assignSimilarDate } from \"../../../utils/dates\";\nimport { AbstractParserWithLeftRightBoundaryChecking } from \"./AbstractParserWithWordBoundaryChecking\";\n\nexport default class UKCasualTimeParser extends AbstractParserWithLeftRightBoundaryChecking {\n    innerPatternString(context: ParsingContext): string {\n        return `(зараз|минулого\\\\s*вечора|минулої\\\\s*ночі|наступної\\\\s*ночі|сьогодні\\\\s*вночі|цієї\\\\s*ночі|цього ранку|вранці|ранку|зранку|опівдні|ввечері|вечора|опівночі|вночі)`;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        let targetDate = context.refDate;\n        const lowerText = match[0].toLowerCase();\n        const component = context.createParsingComponents();\n\n        if (lowerText === \"зараз\") {\n            return references.now(context.reference);\n        }\n        if (lowerText === \"ввечері\" || lowerText === \"вечора\") {\n            return references.evening(context.reference);\n        }\n        if (lowerText.endsWith(\"вранці\") || lowerText.endsWith(\"ранку\") || lowerText.endsWith(\"зранку\")) {\n            return references.morning(context.reference);\n        }\n        if (lowerText.endsWith(\"опівдні\")) {\n            return references.noon(context.reference);\n        }\n        if (lowerText.match(/минулої\\s*ночі/)) {\n            return references.lastNight(context.reference);\n        }\n        if (lowerText.match(/минулого\\s*вечора/)) {\n            return references.yesterdayEvening(context.reference);\n        }\n        if (lowerText.match(/наступної\\s*ночі/)) {\n            const daysToAdd = targetDate.getHours() < 22 ? 1 : 2;\n            const nextDay = new Date(targetDate.getTime());\n            nextDay.setDate(nextDay.getDate() + daysToAdd);\n            assignSimilarDate(component, nextDay);\n            component.imply(\"hour\", 1);\n        }\n        if (lowerText.match(/цієї\\s*ночі/)) {\n            return references.midnight(context.reference);\n        }\n        if (lowerText.endsWith(\"опівночі\") || lowerText.endsWith(\"вночі\")) {\n            return references.midnight(context.reference);\n        }\n        return component;\n    }\n}\n"],"mappings":"AACA,OAAO,KAAKA,UAAU,MAAM,qCAAmC;AAC/D,SAASC,iBAAiB,QAAQ,yBAAuB;AACzD,SAASC,2CAA2C,QAAQ,6CAA2C;AAEvG,eAAc,MAAOC,kBAAmB,SAAQD,2CAA2C;EACvFE,kBAAkBA,CAACC,OAAuB;IACtC,OAAO,mKAAmK;EAC9K;EAEAC,YAAYA,CAACD,OAAuB,EAAEE,KAAuB;IACzD,IAAIC,UAAU,GAAGH,OAAO,CAACI,OAAO;IAChC,MAAMC,SAAS,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACI,WAAW,EAAE;IACxC,MAAMC,SAAS,GAAGP,OAAO,CAACQ,uBAAuB,EAAE;IAEnD,IAAIH,SAAS,KAAK,OAAO,EAAE;MACvB,OAAOV,UAAU,CAACc,GAAG,CAACT,OAAO,CAACU,SAAS,CAAC;IAC5C;IACA,IAAIL,SAAS,KAAK,SAAS,IAAIA,SAAS,KAAK,QAAQ,EAAE;MACnD,OAAOV,UAAU,CAACgB,OAAO,CAACX,OAAO,CAACU,SAAS,CAAC;IAChD;IACA,IAAIL,SAAS,CAACO,QAAQ,CAAC,QAAQ,CAAC,IAAIP,SAAS,CAACO,QAAQ,CAAC,OAAO,CAAC,IAAIP,SAAS,CAACO,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC7F,OAAOjB,UAAU,CAACkB,OAAO,CAACb,OAAO,CAACU,SAAS,CAAC;IAChD;IACA,IAAIL,SAAS,CAACO,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC/B,OAAOjB,UAAU,CAACmB,IAAI,CAACd,OAAO,CAACU,SAAS,CAAC;IAC7C;IACA,IAAIL,SAAS,CAACH,KAAK,CAAC,gBAAgB,CAAC,EAAE;MACnC,OAAOP,UAAU,CAACoB,SAAS,CAACf,OAAO,CAACU,SAAS,CAAC;IAClD;IACA,IAAIL,SAAS,CAACH,KAAK,CAAC,mBAAmB,CAAC,EAAE;MACtC,OAAOP,UAAU,CAACqB,gBAAgB,CAAChB,OAAO,CAACU,SAAS,CAAC;IACzD;IACA,IAAIL,SAAS,CAACH,KAAK,CAAC,kBAAkB,CAAC,EAAE;MACrC,MAAMe,SAAS,GAAGd,UAAU,CAACe,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC;MACpD,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACjB,UAAU,CAACkB,OAAO,EAAE,CAAC;MAC9CF,OAAO,CAACG,OAAO,CAACH,OAAO,CAACI,OAAO,EAAE,GAAGN,SAAS,CAAC;MAC9CrB,iBAAiB,CAACW,SAAS,EAAEY,OAAO,CAAC;MACrCZ,SAAS,CAACiB,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9B;IACA,IAAInB,SAAS,CAACH,KAAK,CAAC,aAAa,CAAC,EAAE;MAChC,OAAOP,UAAU,CAAC8B,QAAQ,CAACzB,OAAO,CAACU,SAAS,CAAC;IACjD;IACA,IAAIL,SAAS,CAACO,QAAQ,CAAC,UAAU,CAAC,IAAIP,SAAS,CAACO,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC/D,OAAOjB,UAAU,CAAC8B,QAAQ,CAACzB,OAAO,CAACU,SAAS,CAAC;IACjD;IACA,OAAOH,SAAS;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}