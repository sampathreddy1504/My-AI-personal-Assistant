{"ast":null,"code":"import { ParsingComponents } from \"../results.js\";\nimport { assignSimilarDate, assignSimilarTime, implySimilarTime } from \"../utils/dates.js\";\nimport { Meridiem } from \"../types.js\";\nexport function now(reference) {\n  const targetDate = reference.getDateWithAdjustedTimezone();\n  const component = new ParsingComponents(reference, {});\n  assignSimilarDate(component, targetDate);\n  assignSimilarTime(component, targetDate);\n  component.assign(\"timezoneOffset\", reference.getTimezoneOffset());\n  component.addTag(\"casualReference/now\");\n  return component;\n}\nexport function today(reference) {\n  const targetDate = reference.getDateWithAdjustedTimezone();\n  const component = new ParsingComponents(reference, {});\n  assignSimilarDate(component, targetDate);\n  implySimilarTime(component, targetDate);\n  component.delete(\"meridiem\");\n  component.addTag(\"casualReference/today\");\n  return component;\n}\nexport function yesterday(reference) {\n  return theDayBefore(reference, 1).addTag(\"casualReference/yesterday\");\n}\nexport function tomorrow(reference) {\n  return theDayAfter(reference, 1).addTag(\"casualReference/tomorrow\");\n}\nexport function theDayBefore(reference, numDay) {\n  return theDayAfter(reference, -numDay);\n}\nexport function theDayAfter(reference, nDays) {\n  const targetDate = reference.getDateWithAdjustedTimezone();\n  const component = new ParsingComponents(reference, {});\n  const newDate = new Date(targetDate.getTime());\n  newDate.setDate(newDate.getDate() + nDays);\n  assignSimilarDate(component, newDate);\n  implySimilarTime(component, newDate);\n  component.delete(\"meridiem\");\n  return component;\n}\nexport function tonight(reference, implyHour = 22) {\n  const targetDate = reference.getDateWithAdjustedTimezone();\n  const component = new ParsingComponents(reference, {});\n  assignSimilarDate(component, targetDate);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.addTag(\"casualReference/tonight\");\n  return component;\n}\nexport function lastNight(reference, implyHour = 0) {\n  let targetDate = reference.getDateWithAdjustedTimezone();\n  const component = new ParsingComponents(reference, {});\n  if (targetDate.getHours() < 6) {\n    targetDate = new Date(targetDate.getTime() - 24 * 60 * 60 * 1000);\n  }\n  assignSimilarDate(component, targetDate);\n  component.imply(\"hour\", implyHour);\n  return component;\n}\nexport function evening(reference, implyHour = 20) {\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.imply(\"hour\", implyHour);\n  component.addTag(\"casualReference/evening\");\n  return component;\n}\nexport function yesterdayEvening(reference, implyHour = 20) {\n  let targetDate = reference.getDateWithAdjustedTimezone();\n  const component = new ParsingComponents(reference, {});\n  targetDate = new Date(targetDate.getTime() - 24 * 60 * 60 * 1000);\n  assignSimilarDate(component, targetDate);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.addTag(\"casualReference/yesterday\");\n  component.addTag(\"casualReference/evening\");\n  return component;\n}\nexport function midnight(reference) {\n  const component = new ParsingComponents(reference, {});\n  if (reference.getDateWithAdjustedTimezone().getHours() > 2) {\n    component.addDurationAsImplied({\n      day: 1\n    });\n  }\n  component.assign(\"hour\", 0);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/midnight\");\n  return component;\n}\nexport function morning(reference, implyHour = 6) {\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.AM);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/morning\");\n  return component;\n}\nexport function afternoon(reference, implyHour = 15) {\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/afternoon\");\n  return component;\n}\nexport function noon(reference) {\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.AM);\n  component.assign(\"hour\", 12);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/noon\");\n  return component;\n}","map":{"version":3,"names":["ParsingComponents","assignSimilarDate","assignSimilarTime","implySimilarTime","Meridiem","now","reference","targetDate","getDateWithAdjustedTimezone","component","assign","getTimezoneOffset","addTag","today","delete","yesterday","theDayBefore","tomorrow","theDayAfter","numDay","nDays","newDate","Date","getTime","setDate","getDate","tonight","implyHour","imply","PM","lastNight","getHours","evening","yesterdayEvening","midnight","addDurationAsImplied","day","morning","AM","afternoon","noon"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\common\\casualReferences.ts"],"sourcesContent":["import { ParsingComponents, ReferenceWithTimezone } from \"../results\";\nimport { assignSimilarDate, assignSimilarTime, implySimilarTime } from \"../utils/dates\";\nimport { Meridiem } from \"../types\";\n\nexport function now(reference: ReferenceWithTimezone): ParsingComponents {\n    const targetDate = reference.getDateWithAdjustedTimezone();\n    const component = new ParsingComponents(reference, {});\n    assignSimilarDate(component, targetDate);\n    assignSimilarTime(component, targetDate);\n    component.assign(\"timezoneOffset\", reference.getTimezoneOffset());\n    component.addTag(\"casualReference/now\");\n    return component;\n}\n\nexport function today(reference: ReferenceWithTimezone): ParsingComponents {\n    const targetDate = reference.getDateWithAdjustedTimezone();\n    const component = new ParsingComponents(reference, {});\n    assignSimilarDate(component, targetDate);\n    implySimilarTime(component, targetDate);\n    component.delete(\"meridiem\");\n    component.addTag(\"casualReference/today\");\n    return component;\n}\n\nexport function yesterday(reference: ReferenceWithTimezone): ParsingComponents {\n    return theDayBefore(reference, 1).addTag(\"casualReference/yesterday\");\n}\n\nexport function tomorrow(reference: ReferenceWithTimezone): ParsingComponents {\n    return theDayAfter(reference, 1).addTag(\"casualReference/tomorrow\");\n}\n\nexport function theDayBefore(reference: ReferenceWithTimezone, numDay: number): ParsingComponents {\n    return theDayAfter(reference, -numDay);\n}\n\nexport function theDayAfter(reference: ReferenceWithTimezone, nDays: number): ParsingComponents {\n    const targetDate = reference.getDateWithAdjustedTimezone();\n    const component = new ParsingComponents(reference, {});\n    const newDate = new Date(targetDate.getTime());\n    newDate.setDate(newDate.getDate() + nDays);\n\n    assignSimilarDate(component, newDate);\n    implySimilarTime(component, newDate);\n    component.delete(\"meridiem\");\n    return component;\n}\n\nexport function tonight(reference: ReferenceWithTimezone, implyHour = 22): ParsingComponents {\n    const targetDate = reference.getDateWithAdjustedTimezone();\n    const component = new ParsingComponents(reference, {});\n    assignSimilarDate(component, targetDate);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.addTag(\"casualReference/tonight\");\n    return component;\n}\n\nexport function lastNight(reference: ReferenceWithTimezone, implyHour = 0): ParsingComponents {\n    let targetDate = reference.getDateWithAdjustedTimezone();\n    const component = new ParsingComponents(reference, {});\n    if (targetDate.getHours() < 6) {\n        targetDate = new Date(targetDate.getTime() - 24 * 60 * 60 * 1000);\n    }\n    assignSimilarDate(component, targetDate);\n    component.imply(\"hour\", implyHour);\n    return component;\n}\n\nexport function evening(reference: ReferenceWithTimezone, implyHour = 20): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.imply(\"hour\", implyHour);\n    component.addTag(\"casualReference/evening\");\n    return component;\n}\n\nexport function yesterdayEvening(reference: ReferenceWithTimezone, implyHour = 20): ParsingComponents {\n    let targetDate = reference.getDateWithAdjustedTimezone();\n    const component = new ParsingComponents(reference, {});\n    targetDate = new Date(targetDate.getTime() - 24 * 60 * 60 * 1000);\n    assignSimilarDate(component, targetDate);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.addTag(\"casualReference/yesterday\");\n    component.addTag(\"casualReference/evening\");\n    return component;\n}\n\nexport function midnight(reference: ReferenceWithTimezone): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    if (reference.getDateWithAdjustedTimezone().getHours() > 2) {\n        // Unless it's very early morning (0~2AM), we assume the midnight is the coming midnight.\n        // Thus, increasing the day by 1.\n        component.addDurationAsImplied({ day: 1 });\n    }\n    component.assign(\"hour\", 0);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/midnight\");\n    return component;\n}\n\nexport function morning(reference: ReferenceWithTimezone, implyHour = 6): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.AM);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/morning\");\n    return component;\n}\n\nexport function afternoon(reference: ReferenceWithTimezone, implyHour = 15): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/afternoon\");\n    return component;\n}\n\nexport function noon(reference: ReferenceWithTimezone): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.AM);\n    component.assign(\"hour\", 12);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/noon\");\n    return component;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}