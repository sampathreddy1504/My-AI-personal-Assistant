{"ast":null,"code":"import { parseDuration, TIME_UNITS_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { reverseDuration } from \"../../../calculation/duration.js\";\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:fa|prima|precedente)(?=(?:\\\\W|$))`, \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}fa(?=(?:\\\\W|$))`, \"i\");\nexport default class ENTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n  strictMode;\n  constructor(strictMode) {\n    super();\n    this.strictMode = strictMode;\n  }\n  innerPattern() {\n    return this.strictMode ? STRICT_PATTERN : PATTERN;\n  }\n  innerExtract(context, match) {\n    const timeUnits = parseDuration(match[1]);\n    const outputTimeUnits = reverseDuration(timeUnits);\n    return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n  }\n}","map":{"version":3,"names":["parseDuration","TIME_UNITS_PATTERN","ParsingComponents","AbstractParserWithWordBoundaryChecking","reverseDuration","PATTERN","RegExp","STRICT_PATTERN","ENTimeUnitAgoFormatParser","strictMode","constructor","innerPattern","innerExtract","context","match","timeUnits","outputTimeUnits","createRelativeFromReference","reference"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\locales\\it\\parsers\\ITTimeUnitAgoFormatParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { parseDuration, TIME_UNITS_PATTERN } from \"../constants\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { reverseDuration } from \"../../../calculation/duration\";\n\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:fa|prima|precedente)(?=(?:\\\\W|$))`, \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}fa(?=(?:\\\\W|$))`, \"i\");\n\nexport default class ENTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n    constructor(private strictMode: boolean) {\n        super();\n    }\n\n    innerPattern(): RegExp {\n        return this.strictMode ? STRICT_PATTERN : PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const timeUnits = parseDuration(match[1]);\n        const outputTimeUnits = reverseDuration(timeUnits);\n\n        return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n    }\n}\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,kBAAkB,QAAQ,iBAAe;AACjE,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAChH,SAASC,eAAe,QAAQ,kCAAgC;AAEhE,MAAMC,OAAO,GAAG,IAAIC,MAAM,CAAC,IAAIL,kBAAkB,+CAA+C,EAAE,GAAG,CAAC;AACtG,MAAMM,cAAc,GAAG,IAAID,MAAM,CAAC,IAAIL,kBAAkB,0BAA0B,EAAE,GAAG,CAAC;AAExF,eAAc,MAAOO,yBAA0B,SAAQL,sCAAsC;EACrEM,UAAA;EAApBC,YAAoBD,UAAmB;IACnC,KAAK,EAAE;IADS,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEAE,YAAYA,CAAA;IACR,OAAO,IAAI,CAACF,UAAU,GAAGF,cAAc,GAAGF,OAAO;EACrD;EAEAO,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,SAAS,GAAGf,aAAa,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,MAAME,eAAe,GAAGZ,eAAe,CAACW,SAAS,CAAC;IAElD,OAAOb,iBAAiB,CAACe,2BAA2B,CAACJ,OAAO,CAACK,SAAS,EAAEF,eAAe,CAAC;EAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}