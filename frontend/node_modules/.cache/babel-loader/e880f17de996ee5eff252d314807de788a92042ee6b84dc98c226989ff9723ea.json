{"ast":null,"code":"import { parseDuration, TIME_UNITS_NO_ABBR_PATTERN, TIME_UNITS_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { reverseDuration } from \"../../../calculation/duration.js\";\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\nexport default class ENTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n  strictMode;\n  constructor(strictMode) {\n    super();\n    this.strictMode = strictMode;\n  }\n  innerPattern() {\n    return this.strictMode ? STRICT_PATTERN : PATTERN;\n  }\n  innerExtract(context, match) {\n    const duration = parseDuration(match[1]);\n    if (!duration) {\n      return null;\n    }\n    return ParsingComponents.createRelativeFromReference(context.reference, reverseDuration(duration));\n  }\n}","map":{"version":3,"names":["parseDuration","TIME_UNITS_NO_ABBR_PATTERN","TIME_UNITS_PATTERN","ParsingComponents","AbstractParserWithWordBoundaryChecking","reverseDuration","PATTERN","RegExp","STRICT_PATTERN","ENTimeUnitAgoFormatParser","strictMode","constructor","innerPattern","innerExtract","context","match","duration","createRelativeFromReference","reference"],"sources":["C:\\Users\\sampa\\Downloads\\myapp\\myapp\\myapp\\frontend\\node_modules\\chrono-node\\src\\locales\\en\\parsers\\ENTimeUnitAgoFormatParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { parseDuration, TIME_UNITS_NO_ABBR_PATTERN, TIME_UNITS_PATTERN } from \"../constants\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { reverseDuration } from \"../../../calculation/duration\";\n\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\n\nexport default class ENTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n    constructor(private strictMode: boolean) {\n        super();\n    }\n\n    innerPattern(): RegExp {\n        return this.strictMode ? STRICT_PATTERN : PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const duration = parseDuration(match[1]);\n        if (!duration) {\n            return null;\n        }\n        return ParsingComponents.createRelativeFromReference(context.reference, reverseDuration(duration));\n    }\n}\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,0BAA0B,EAAEC,kBAAkB,QAAQ,iBAAe;AAC7F,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAChH,SAASC,eAAe,QAAQ,kCAAgC;AAEhE,MAAMC,OAAO,GAAG,IAAIC,MAAM,CAAC,IAAIL,kBAAkB,0CAA0C,EAAE,GAAG,CAAC;AACjG,MAAMM,cAAc,GAAG,IAAID,MAAM,CAAC,IAAIN,0BAA0B,0CAA0C,EAAE,GAAG,CAAC;AAEhH,eAAc,MAAOQ,yBAA0B,SAAQL,sCAAsC;EACrEM,UAAA;EAApBC,YAAoBD,UAAmB;IACnC,KAAK,EAAE;IADS,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEAE,YAAYA,CAAA;IACR,OAAO,IAAI,CAACF,UAAU,GAAGF,cAAc,GAAGF,OAAO;EACrD;EAEAO,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,QAAQ,GAAGhB,aAAa,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,CAACC,QAAQ,EAAE;MACX,OAAO,IAAI;IACf;IACA,OAAOb,iBAAiB,CAACc,2BAA2B,CAACH,OAAO,CAACI,SAAS,EAAEb,eAAe,CAACW,QAAQ,CAAC,CAAC;EACtG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}